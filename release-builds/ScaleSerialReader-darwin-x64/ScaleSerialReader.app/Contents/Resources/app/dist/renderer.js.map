{"version":3,"sources":["../renderer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"renderer.js","sourcesContent":["// // This file is required by the index.html file and will\n// // be executed in the renderer process for that window.\n// // All of the Node.js APIs are available in this process.\n//\n// const SerialPort = require('SerialPort');\n// const createTable = require('data-table');\n// let m;\n// let port = new SerialPort('/dev/tty.usbserial', {\n//   parser: SerialPort.parsers.readline('\\n'),\n//   baudrate: 19200\n// });\n//\n// // Stream all data coming in from the serial port.\n// port.on('data', function (data) {\n//   document.getElementById('weight').textContent = data;\n// });\n//\n// SerialPort.list((err, ports) => {\n//   console.log('ports', ports);\n//   if (err) {\n//     document.getElementById('error').textContent = err.message;\n//     return;\n//   } else {\n//     document.getElementById('error').textContent = '';\n//   }\n//\n//   if (ports.length === 0) {\n//     document.getElementById('error').textContent = 'No ports discovered';\n//   }\n//\n//   const headers = Object.keys(ports[0]);\n//   const table = createTable(headers);\n//   tableHTML = '';\n//   table.on('data', data => tableHTML += data);\n//   table.on('end', () => document.getElementById('ports').innerHTML = tableHTML);\n//   ports.forEach(port => table.write(port));\n//   table.end();\n// });\n//\n// let populateStorage = (dataLine) => {\n//\n// };\n\n// USED ONLY FOR TESTING. ACTUAL RENDERER IS THE WEIGH STATION UI\n"]}